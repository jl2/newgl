* newgl

** Buffer Refactor
shader-program will be primary class instead of geometry.
Each layout entry has its own buffer of data.
shader-program has (set-data layout-name gl-array-of-values)
layout will have buffers

(make-instance 'shader-program


** About
A CLOS wrapper around basic GLFW and OpenGL functionality.

This library allows creating OpenGL objects by subclassing opengl-object or geometry and creating a viewer.

To draw using OpenGL, subclass opengl-object or geometry and implement the apropriate methods.

** Opening the Viewer
To open an empty viewer, run:

#+BEGIN_SRC lisp
(ql:quickload :newgl)
(newgl:display)
#+END_SRC

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<CLOSURE (LAMBDA () :IN NEWGL:VIEWER) {1005D9117B}> :STATUS :SCHEDULED {1005D911E3}>

** Examples
For an example object, see the [[https://github.com/jl2/gl-fractals][gl-fractals]] repository.
#+BEGIN_SRC lisp
(ql:quickload :newgl)

(newgl:display (make-instance 'newgl:tri-mesh :indices #(0 1 2) :vertices
                                      #(0.0f0 0.0f0 0.0f0
                                        0.0f0 1.0f0 0.0f0
                                        1.0f0 0.0f0 0.0f0 1.0f0
                                        0.5f0 0.0f0 0.0f0
                                        0.0f0 1.0f0 0.0f0
                                        1.0f0 0.0f0 0.0f0 1.0f0
                                        0.5f0 0.5f0 0.0f0
                                        0.0f0 1.0f0 0.0f0
                                        1.0f0 0.0f0 0.0f0 1.0f0)))
#+END_SRC

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<CLOSURE (LAMBDA () :IN NEWGL:VIEWER) {101CE0F41B}> :STATUS :SCHEDULED {101CE0F483}>

#+BEGIN_SRC lisp
(ql:quickload :stl)
(ql:quickload :newgl)

(newgl:view-stl "~/cube.stl")

#+END_SRC

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<CLOSURE (LAMBDA () :IN NEWGL:VIEWER) {1014C9174B}> :STATUS :SCHEDULED {1014C917B3}>

** License
ISC

Copyright (c) 2020 Jeremiah LaRocco <jeremiah_larocco@fastmail.com>



* TODOs
** TODO Wavefront OBJ load and render
** TODO Collada load and render
** TODO Parametric surfaces?


* DONEs
** DONE Look at creating complex-fractal-scene that handles drag itself?
** DONE aspect-ratio-corrected mix-in class - no longer needed?
** DONE Implement more methods on scene class
** DONE Move top level keyboard handler into scene
** DONE More examples.
** DONE Fix keyframe-sequence :repeat behavior that repeats first/last point causing flicker

